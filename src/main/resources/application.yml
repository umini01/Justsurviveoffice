# <문자메시지 관련 순서4>
coolsms:
  api-key: NCS93YETYVO43LUO
  api-secret: HXQJYZDQPVWFW7P2RMQZHUIMQH1Q1HKJ
  from: 01064396718

spring: # 주의할 점은 내용작성시 들여쓰기 내어쓰기시 공백개수를 반드시 꼭 지켜야 한다.
  application:
    name: Justsurviveoffice

  mail:
    host: smtp.gmail.com
    port: 9090
    username: jangym0321@gmail.com
    password: jym010321@
    properties:
      mail:
      smtp:
        auth: true
        starttls:
          enable: true  
 
  profiles: #실행환경(dev(개발),test(테스트),local(로컬),prod(운영))
    active: local 

  mvc:
    view: #뷰 리졸버. view 경로 및 확장자 지정하기. JSP를 뷰로 사용한다.  
      prefix: /WEB-INF/views/
      suffix: .jsp

# datasource: #DB 접속이 1개만 있을 경우
#   driver-class-name: oracle.jdbc.OracleDriver
#  #url: jdbc:oracle:thin:@127.0.0.1:1521:xe
#   url: jdbc:oracle:thin:@//127.0.0.1:1521/xe  # oracle 12c 이후부터는 이렇게 하라고 함.
#   username: mymvc_user
#   password: gclass
#   type: com.zaxxer.hikari.HikariDataSource
#   hikari: #커넥션풀 
#    #driver-class-name: oracle.jdbc.OracleDriver
#    #jdbc-url: jdbc:oracle:thin:@127.0.0.1:1521:xe
#    #username: mymvc_user
#    #password: gclass
#     connection-timeout : 30000 #클라이언트가 pool에 connection을 요청하는데 기다리는 최대시간을 설정 30초
#     maximum-pool-size : 10 #최대 커넥션 개수 설정
#     max-lifetime: 1800000  #커넥션 풀에서 살아있을 수 있는 커넥션의 최대 수명시간 1,800초(30분)    

  datasource-finalorauser2:
    driver-class-name: oracle.jdbc.OracleDriver
    jdbc-url: jdbc:oracle:thin:@3.34.183.137:1521/xe
    username: final_orauser2
    password: seven
    type: com.zaxxer.hikari.HikariDataSource
    hikari:
      minimum-idle: 5
      maximum-pool-size: 10
      idle-timeout: 30000
      max-lifetime: 1800000
      connection-timeout: 30000

      
  jpa:
    database-platform: org.hibernate.dialect.OracleDialect      # Spring Boot 3.2.1 버전 이후 부터는 JPA Provider가 적절한 Dialect 를 찾아내게 해주므로, 즉 설정을 명시하지 않아도 Oracle을 자동 인식해주므로 이를 명시적으로 지정하게 되면 오류가 발생하게 된다.  

    hibernate:
      ddl-auto: none

    properties:
      hibernate:
        '[show_sql]': true         
        '[format_sql]': true
        '[use_sql_comments]': true

    open-in-view: false


  data: #=== (몽고DB) === 
    mongodb:
      uri: mongodb://devuser:qwer1234$@3.34.183.137:27017/mydb
      
  messages: #메시지(파일이 여러개일 경우 ,로 구분)
    basename: messages.validation
    encoding: UTF-8

  devtools: #View reload
    livereload:
      enabled: true

    restart: #컨트롤러, 모델단이 바뀌었을 때 프로젝트 재시작(reload) 설정 (정확히는 classpath에 있는 모든 파일)
      enabled: true #재시작(reload) 함

  servlet:
    multipart:
      max-file-size: 10MB     # 파일 업로드 용량제한 설정하기. 파일 업로드 용량을 설정하지 않으면 기본값은 1048576 bytes (1MB)으로 된다.
      max-request-size: 12MB  # 파일 및 파일을 제외한 input 태그값 업로드 용량제한 설정하기. 업로드 용량을 설정하지 않으면 기본값은 1048576 bytes (1MB)으로 된다.

mybatis: #mybatis 설정
 #type-aliases-package: com.spring.app.**.domain 
 #mapper-locations: com/spring/app/**/mapper/*.xml   #src/main/java 아래 패키지속에 매퍼파일을 만드는 경우 
  mapper-locations: mybatis/mapper/**/*.xml          #src/main/resources 아래 폴더속에 매퍼파일을 만드는 경우
logging: #로그 지정
  level:
    #root: error
    '[com.spring.board]': debug 
    #com.zaxxer.hikari.HikariConfig: DEBUG
    #com.zaxxer.hikari: TRACE 

server:
  tomcat:
    max-part-count: 30 
  port: 9090
  servlet:
    context-path: /justsurviveoffice # Spring Framework 에서는 WAS 톰캣서버를 더블클릭하여 context Path 를 수정하였으나 Spring Boot 에서는 여기에서 한다. context-path: 를 주석처리하면 context Path 가 없는 것이다.
                                    # context-path 를 /myspring 으로 주었으므로 Boot Dashboard 에 가서 myspring 에 마우스 우측클릭 Show Properties 에 클릭하여 General 에서 Path: 란에 myspring 을 입력해준다.  
    encoding:
      charset: UTF-8
      enabled: true #http 인코딩 지원을 활성화할지 여부
      force: true #post 방식으로 전송했을때 한글데이터가 안깨지도록 함. # Spring Framework 에서는 web.xml 파일에서 filter 태그를 등록시켜 주었음.
      
 